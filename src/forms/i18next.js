import i18next from 'i18next';
import { getCurrentLocale } from '../helpers/export/util';

const lng = getCurrentLocale();

i18next.init({
  debug: true,
  resources: {
    en: {
      translation: {
        label: 'Label',
        labelPosition: 'Label Position',
        'select.top': 'Top',
        'select.left-left.aligned': 'Left (Left-aligned)',
        'select.left-right.aligned': 'Left (Right-aligned)',
        'select.right-left.aligned': 'Right (Left-aligned)',
        'select.right-right.aligned': 'Right (Right-aligned)',
        'select.bottom.aligned': 'Bottom',
        hideLabel: 'Hide Label',
        labelWidth: 'Label Width',
        labelMargin: 'Label Margin',
        placeholder: 'Placeholder',
        description: 'Description',
        tooltip: 'Tooltip',
        errorLabel: 'Error Label',
        customClass: 'Custom CSS Class',
        tabindex: 'Tab Index',
        persistent: 'Persistent',
        multiple: 'Multiple Values',
        reorder: 'Allow Reordering',
        clearOnHide: 'Clear Value When Hidden',
        protected: 'Protected',
        hidden: 'Hidden',
        mask: 'Hide Input',
        dataGridLabel: 'Show Label in DataGrid',
        disabled: 'Disabled',
        autofocus: 'Initial Focus',
        tableView: 'Table View',
        alwaysEnabled: 'Always enabled',
        disableInlineEdit: 'Disable inline editing in view mode',
        key: 'Property Name',
        tags: 'Field Tags',
        properties: 'Custom Properties',
        'properties.label': 'Value',
        'properties.default-value': 'Value',
        defaultValue: 'Default Value',
        refreshOn: 'Refresh On',
        clearOnRefresh: 'Clear Value On Refresh',
        allowCalculateOverride: 'Allow Manual Override of Calculated Value',
        encrypted: 'Encrypt',
        dbIndex: 'Database Index',
        triggerChangeWhenCalculate: `Trigger the "change" event if calculated value changed`,
        'validate.required': 'Required',
        unique: 'Unique',
        validateOn: 'Validate On',
        'validateOn.change': 'Change',
        'validateOn.blur': 'Blur',
        'validate.customMessage': 'Custom Error Message',
        'custom-validation-js': 'Custom Validation',
        'validate.customPrivate': 'Secret Validation',
        'json-validation-json': 'JSONLogic Validation',
        optionalWhenDisabled: 'Optional when disabled',
        logic: 'Advanced Logic',
        name: 'Logic Name',
        triggerPanel: 'Trigger',
        show: 'Show',
        when: 'When the form component:',
        eq: 'Has the value:',
        event: 'Event Name',
        actions: 'Actions',
        actionPanel: 'Action',
        state: 'Set State',
        'key.tooltip': 'The name of this field in the API endpoint.',
        'key.patternMessage':
          'The property name must only contain alphanumeric characters, underscores, dots and dashes and should not be ended by dash or dot.',
        'tags.tooltip': 'Tag the field for use in custom logic.',
        'properties.tooltip': 'This allows you to configure any custom properties for this component.'
      }
    },
    ru: {
      translation: {
        label: 'Название поля',
        labelPosition: 'Расположение названия поля',
        'select.top': 'Вверху',
        'select.left-left.aligned': 'Слева (выравнивание по левому краю)',
        'select.left-right.aligned': 'Слева (выравнивание по правому краю)',
        'select.right-left.aligned': 'Справа (с выравниванием по левому краю)',
        'select.right-right.aligned': 'Справа (выравнивание по правому краю)',
        'select.bottom.aligned': 'Внизу',
        hideLabel: 'Скрыть название поля',
        labelWidth: 'Ширина названия плдя',
        labelMargin: 'Отступы названия поля',
        placeholder: 'Текст для пустого поля',
        description: 'Описание',
        tooltip: 'Подсказка',
        errorLabel: 'Текст ошибки',
        customClass: 'Кастомный CSS класс',
        tabindex: 'Индекс таба',
        persistent: 'Постоянное поле',
        multiple: 'Множественный выбор',
        reorder: 'Разрешить изменение порядка',
        clearOnHide: 'Очистить, если поле скрыто',
        protected: 'Защищенное поле',
        hidden: 'Скрыть поле',
        mask: 'Скрыть поле',
        dataGridLabel: 'Показать название поле в DataGrid',
        disabled: 'Заблокированное поле',
        autofocus: 'Фокус при загрузке страницы',
        tableView: 'Табличный просмотр',
        alwaysEnabled: 'Всегда включено',
        disableInlineEdit: 'Отключить встроенное редактирование в режиме просмотра',
        key: 'Название свойства',
        tags: 'Теги поля',
        properties: 'Пользовательские свойства',
        'properties.label': 'Значение',
        'properties.default-value': 'Значение',
        defaultValue: 'Значение по умолчанию',
        refreshOn: 'Обновлять',
        clearOnRefresh: 'Очистить значение при обновлении',
        allowCalculateOverride: 'Разрешить ручное переопределение вычисляемого значения',
        encrypted: 'Шифровать',
        dbIndex: 'Индекс базы данных',
        triggerChangeWhenCalculate: `Инициировать событие "изменение" если расчетное значение изменилось`,
        'validate.required': 'Обязательное поле',
        unique: 'Уникальное поле',
        validateOn: 'Валидировать при',
        'validateOn.change': 'Изменении',
        'validateOn.blur': 'Потере фокуса',
        'validate.customMessage': 'Пользовательское сообщение об ошибке',
        'custom-validation-js': 'Пользовательская валидация',
        'validate.customPrivate': 'Секретная проверка',
        'json-validation-json': 'JSON валидация',
        optionalWhenDisabled: 'Не обязательно, если отключено',
        logic: 'Расширенная логика',
        name: 'Logic Name',
        triggerPanel: 'Trigger',
        show: 'Show',
        when: 'Когда компонент формы:',
        eq: 'Имеет значение:',
        event: 'Название события',
        actions: 'Действия',
        actionPanel: 'Действие',
        state: 'Установить состояние',
        'key.tooltip': 'Имя этого поля в конечной точке API.',
        'key.patternMessage':
          'Имя свойства должно содержать только буквенно-цифровые символы, знаки подчеркивания, точки и тире и не должно заканчиваться тире или точкой.',
        'tags.tooltip': 'Пометьте поле для использования в пользовательской логике.',
        'properties.tooltip': 'Позволяет вам настроить любые пользовательские свойства для этого компонента.'
      }
    }
  }
});

export default i18next;
